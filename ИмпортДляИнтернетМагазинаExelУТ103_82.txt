//2011-11-01

Процедура ПриОткрытии()
	ДатаЗагрузки = ТекущаяДата();
	ЭлементыФормы.ПапкаНоменклатуры.Значение = Справочники.Номенклатура.НайтиПоНаименованию("Новая загруженная номенклатура");
	Если НЕ ЗначениеЗаполнено(ЭлементыФормы.ПапкаНоменклатуры.Значение) Тогда
		ПапкаНоменклатуры = Справочники.Номенклатура.СоздатьГруппу();
		ПапкаНоменклатуры.Наименование = "Новая загруженная номенклатура";
		ПапкаНоменклатуры.Записать();
        ЭлементыФормы.ПапкаНоменклатуры.Значение = ПапкаНоменклатуры.Ссылка;
	КонецЕсли;
	Склад = Справочники.Склады.НайтиПоНаименованию("Главный склад");
	ТипЦен = Справочники.ТипыЦенНоменклатуры.НайтиПоНаименованию("Закупочная");
	Организация = Справочники.Организации.НайтиПоКоду("000000001");
	Поставщик = Справочники.Контрагенты.НайтиПоКоду("Ю00000046");

КонецПроцедуры

Процедура ТоварыНоменклатураПриИзменении(Элемент)
	СтрокаТабличнойЧасти = ЭлементыФормы.Товары.ТекущиеДанные;
	СтрокаТабличнойЧасти.Артикул = СтрокаТабличнойЧасти.Номенклатура.Артикул;
	СтрокаТабличнойЧасти.ЕдиницаИзмерения =  СтрокаТабличнойЧасти.Номенклатура.ЕдиницаХраненияОстатков;
	СтрокаТабличнойЧасти.ВидНоменклатуры = СтрокаТабличнойЧасти.Номенклатура.ВидНоменклатуры;
	СтрокаТабличнойЧасти.НоменклатурнаяГруппа  = СтрокаТабличнойЧасти.Номенклатура.НоменклатурнаяГруппа;
	СтрокаТабличнойЧасти.Родитель         = СтрокаТабличнойЧасти.Номенклатура.Родитель;
КонецПроцедуры

Процедура Склад1ПриИзменении(Элемент)   
	Вопрос("При изменении Склада необходимо обновить остатки товаров. Перезаполните табличную часть!", РежимДиалогаВопрос.ОК);
КонецПроцедуры

Процедура ПоставщикПриИзменении(Элемент)
	Вопрос("При изменении Поставщики необходимо обновить остатки товаров. Перезаполните табличную часть!", РежимДиалогаВопрос.ОК);
КонецПроцедуры

Процедура ИмяФайлаНачалоВыбора(Элемент, СтандартнаяОбработка)
	Режим = РежимДиалогаВыбораФайла.Открытие;
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(Режим);	
	ДиалогВыбораФайла.Фильтр = "Текст (*.xls) |*.xls";
	ДиалогВыбораФайла.Заголовок = "Выберите файл Exel с данными для загрузки";
	ДиалогВыбораФайла.МножественныйВыбор = Ложь;
	Если ДиалогВыбораФайла.Выбрать() Тогда
    	МассивФайлов = ДиалогВыбораФайла.ВыбранныеФайлы;
    	Для каждого Файл Из МассивФайлов Цикл
			ПутьКФайлу = Файл; 
    	КонецЦикла;
	Иначе
    	Предупреждение("Файл не выбран!");
	КонецЕсли;
КонецПроцедуры                    

Процедура ПрочитатьФайлНажатие(Элемент)
	Если Товары.Количество() > 0 Тогда
	ТекстВопроса = "Перед заполнением табличная часть будет очищена. Заполнить?";
	Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да, Метаданные().Синоним);
	Если Ответ <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли; 
	Товары.Очистить();
	КонецЕсли;

	Ошибка = "";
	Если НЕ ЗначениеЗаполнено(ПутьКФайлу) Тогда
		Ошибка = Ошибка + "Выберите файл данных!";
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(Поставщик) Тогда
		Ошибка = Ошибка + " Выберите контрагента - поставщика.";
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(Склад) Тогда
		Ошибка = Ошибка + " Заполните Склад.";
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ЭлементыФормы.ПапкаНоменклатуры.Значение) Тогда                             
		Ошибка = Ошибка + " Выберите папку для закрузки номенклатуры.";
	КонецЕсли;
	Если НЕ Ошибка = "" Тогда
		Вопрос(Ошибка, РежимДиалогаВопрос.ОК);
		Возврат;
    КонецЕсли;
	Ответ = Вопрос("При чтении данных будут загружены новые элементы справочника Номенклатура. Продолжить?", РежимДиалогаВопрос.ОКОтмена, ,КодВозвратаДиалога.ОК);
	Если НЕ Ответ = КодВозвратаДиалога.ОК	Тогда 
		Возврат; 
	КонецЕсли;
                     
	ОбъектЭксел = Новый COMОбъект("Excel.Application");
	Книга = ОбъектЭксел.WorkBooks.Open(ПутьКФайлу);
	Лист = Книга.WorkSheets(1);   

	ВсегоКолонок = Лист.Cells(1,1).SpecialCells(11).Column;
	ВсегоСтрок = Лист.Cells(1,1).SpecialCells(11).Row;      

	Если (НачСпискаЗагр<=3) Тогда
		СтартоваяПозиция = 3;	
	Иначе
		СтартоваяПозиция = НачСпискаЗагр;
	КонецЕсли;
	
	Если (КонецСпискаЗагр<=0) ИЛИ (КонецСпискаЗагр>ВсегоСтрок) Тогда
		КонечнаяПозиция = ВсегоСтрок;
	Иначе
		КонечнаяПозиция = КонецСпискаЗагр;
	КонецЕсли;
	
	Для Строка = СтартоваяПозиция По КонечнаяПозиция Цикл  
		//Проверим, есть ли такая Номенклатура в базе
		//ПоказательЗагрузки = "Загрузка строки "+Строка+" из "+ВсегоСтрок;
		Состояние("Загрузка строки "+Строка+" из "+ВсегоСтрок);
		Характеристика = "";
		НоменклатрураСтроки = Справочники.Номенклатура.ПустаяСсылка();
		ХарактеристикаСтроки = Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка();
		ЕстьНоменклатура = Ложь;
		Лист.Cells(Строка, 1).NumberFormat = "00000000,00";
		Попытка
				Книга.Save();
		Исключение
				Сообщить(ОписаниеОшибки()+" Файл не сохранен!");
				Возврат;
		КонецПопытки;

		Характеристика = СокрЛП(Лист.Cells(Строка, 6).Value);
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ОсновнойПоставщик", Поставщик);
		Запрос.УстановитьПараметр("Артикул", Строка(СокрЛП(Лист.Cells(Строка, 1).Value))); 
		Запрос.УстановитьПараметр("Наименование", СокрЛП(Лист.Cells(Строка, 2).Value)); 
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Номенклатура.Наименование КАК Наименование,
		|	Номенклатура.Ссылка  	  КАК НомСсылка
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|ГДЕ
		|	Номенклатура.Наименование = &Наименование
		|	И Номенклатура.Артикул = &Артикул                 
		|	И Номенклатура.ОсновнойПоставщик = &ОсновнойПоставщик  ";
		ВыборкаНоменклатура = Запрос.Выполнить().Выбрать();
		Пока ВыборкаНоменклатура.Следующий() Цикл
			НоменклатрураСтроки = ВыборкаНоменклатура.НомСсылка;
			ЕстьНоменклатура = Истина;
			Если НЕ Характеристика = "" Тогда
				НОбъект = НоменклатрураСтроки.ПолучитьОбъект();
				НОбъект.ВестиУчетПоХарактеристикам = Истина;
				НОбъект.Записать();
				Запрос = Новый Запрос;
				Запрос.УстановитьПараметр("Владелец", НоменклатрураСтроки);
				Запрос.УстановитьПараметр("Наименование", СокрЛП(Лист.Cells(Строка, 6).Value) );
				Запрос.Текст =
				"ВЫБРАТЬ
				|	ХарактеристикиНоменклатуры.Наименование КАК Наименование,
				|	ХарактеристикиНоменклатуры.Владелец КАК Владелец,
				|	ХарактеристикиНоменклатуры.Ссылка  КАК Ссылка
				|ИЗ
				|	Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
				|ГДЕ
				|	ХарактеристикиНоменклатуры.Владелец = &Владелец
				|	И ХарактеристикиНоменклатуры.Наименование = &Наименование";
				Выборка = Запрос.Выполнить().Выбрать();
				Пока Выборка.Следующий() Цикл
					ХарактеристикаСтроки = Выборка.Ссылка;	
				КонецЦикла;
				Если ХарактеристикаСтроки = Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка() Тогда
					Столбец = 12;
					Характеристика = Справочники.ХарактеристикиНоменклатуры.СоздатьЭлемент();
					Характеристика.Владелец = НоменклатрураСтроки;
					Характеристика.Наименование = СокрЛП(Лист.Cells(Строка, 6).Value);
					Характеристика.Записать();
					//Проверим есть ли Свойство, Значение в ИБ, если нет, создадим
					Пока СокрЛП(Лист.Cells(Строка, Столбец).Value) <> "" Цикл 
						Свойство = ПланыВидовХарактеристик.СвойстваОбъектов.ПустаяСсылка();
						Запрос = Новый Запрос;
						Запрос.УстановитьПараметр("НазначениеСвойства", ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_ХарактеристикиНоменклатуры);
						Запрос.УстановитьПараметр("Наименование", СокрЛП(Лист.Cells(Строка, Столбец).Value)); 
						Запрос.Текст = 
						"ВЫБРАТЬ
						|	СвойстваОбъектов.Наименование КАК Наименование,
						|	СвойстваОбъектов.Ссылка КАК СвойствоСсылка
						|ИЗ
						|	ПланВидовХарактеристик.СвойстваОбъектов КАК СвойстваОбъектов
						|ГДЕ
						|	СвойстваОбъектов.НазначениеСвойства = &НазначениеСвойства
						|	И СвойстваОбъектов.Наименование = &Наименование
						|	" ;
						Выборка = Запрос.Выполнить().Выбрать();
						Пока Выборка.Следующий() Цикл;
							Свойство = Выборка.СвойствоСсылка; 	 
						КонецЦикла;
						Если Свойство = ПланыВидовХарактеристик.СвойстваОбъектов.ПустаяСсылка() Тогда
							НовоеСвойство = ПланыВидовХарактеристик.СвойстваОбъектов.СоздатьЭлемент();
							НовоеСвойство.НазначениеСвойства = ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_ХарактеристикиНоменклатуры;
							НовоеСвойство.Наименование = СокрЛП(Лист.Cells(Строка, Столбец).Value);
							НовоеСвойство.Записать();
							Свойство = НовоеСвойство.Ссылка;
						КонецЕсли;
						//проверяем ЗначениеСвойства
						ЗначениеСвойства = Справочники.ЗначенияСвойствОбъектов.ПустаяСсылка();
						Запрос = Новый Запрос;
						Запрос.УстановитьПараметр("Владелец", Свойство);
						Запрос.УстановитьПараметр("Наименование", СокрЛП(Лист.Cells(Строка, Столбец+1).Value)); 
						Запрос.Текст =
						"ВЫБРАТЬ
						|	ЗначенияСвойствОбъектов.Ссылка  КАК ЗначениеСвойстваСсылка
						|ИЗ
						|	Справочник.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
						|ГДЕ
						|	ЗначенияСвойствОбъектов.Владелец = &Владелец
						|	И ЗначенияСвойствОбъектов.Наименование = &Наименование
						| ";
						Выборка = Запрос.Выполнить().Выбрать();
						Пока Выборка.Следующий() Цикл
							ЗначениеСвойства = Выборка.ЗначениеСвойстваСсылка;		
						КонецЦикла;
						Если ЗначениеСвойства = Справочники.ЗначенияСвойствОбъектов.ПустаяСсылка() Тогда
							ЗначениеСвойства = Справочники.ЗначенияСвойствОбъектов.СоздатьЭлемент();
							ЗначениеСвойства.Владелец = Свойство.Ссылка;
							ЗначениеСвойства.Наименование = СокрЛП(Лист.Cells(Строка, Столбец+1).Value);
							Значениесвойства.Записать();
						КонецЕсли;
						
						Запись = РегистрыСведений.ЗначенияСвойствОбъектов.СоздатьМенеджерЗаписи();
						Запись.Объект = Характеристика.Ссылка;
					    Запись.Свойство = Свойство;
					    Запись.Значение = Значениесвойства;
					    Запись.Записать();

						Столбец = Столбец + 2;
					КонецЦикла; //Пока СокрЛП(Лист.Cells(Строка, Столбец).Value) <> "" Цикл 
					
					СвойстваХарактеристики = РегистрыСведений.ЗначенияСвойствОбъектов.СоздатьНаборЗаписей();
				    СвойстваХарактеристики.Отбор.Объект.Значение = Характеристика.Ссылка;
				    СвойстваХарактеристики.Отбор.Объект.Использование = Истина;
				    Характеристика.СформироватьНаименование(СвойстваХарактеристики.Выгрузить());
				    Характеристика.Записать();
					
                    ХарактеристикаСсылка = Характеристика.Ссылка;
					ХарактеристикаСтроки = ХарактеристикаСсылка;
				КонецЕсли; //Если ХарактеристикаСтроки = Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка() Тогда
			КонецЕсли; //Если Характеристика = "" Тогда
		КонецЦикла;                         
		 
		//Если такой Номенклатуры нет в базе - создать ее
		Если НЕ ЕстьНоменклатура = Истина Тогда
			
			//Проверим есть ли в базе Вид номенклатуры
			ТипНом = Перечисления.ТипыНоменклатуры.ПустаяСсылка();
			Если Строка(СокрЛП(Лист.Cells(Строка, 11).Value)) = "Товар" Тогда
				ТипНом = Перечисления.ТипыНоменклатуры.Товар;
			ИначеЕсли Строка(СокрЛП(Лист.Cells(Строка, 11).Value)) = "Комплект" Тогда
				ТипНом = Перечисления.ТипыНоменклатуры.Комплект;
			ИначеЕсли Строка(СокрЛП(Лист.Cells(Строка, 11).Value)) = "Набор" Тогда
				ТипНом = Перечисления.ТипыНоменклатуры.Набор;
			ИначеЕсли Строка(СокрЛП(Лист.Cells(Строка, 11).Value)) = "Услуга" Тогда
				ТипНом = Перечисления.ТипыНоменклатуры.Услуга;
			КонецЕсли;
			Если ТипНом = Перечисления.ТипыНоменклатуры.ПустаяСсылка() Тогда
				 Сообщить("В строке № " + Строка + " загружаемого файла указан не корректный Тип номенклатуры, для данной позиции Тип номенклатуры будет 'Товар'");
				 ТипНом = Перечисления.ТипыНоменклатуры.Товар;
			КонецЕсли;
			
			ВидНоменклатурыСтроки = Справочники.ВидыНоменклатуры.ПустаяСсылка();
			Запрос = Новый Запрос;	
			Запрос.УстановитьПараметр("ВидНоменклатуры", СокрЛП(Лист.Cells(Строка, 9).Value)); 
			Запрос.УстановитьПараметр("ТипНоменклатуры", ТипНом); 
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ВидыНоменклатуры.Ссылка
			|ИЗ
			|	Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
			|ГДЕ
			|	ВидыНоменклатуры.Наименование = &ВидНоменклатуры
			|	И ВидыНоменклатуры.ТипНоменклатуры = &ТипНоменклатуры";
			ВыборкаВидНоменклатура = Запрос.Выполнить().Выбрать();
			Пока ВыборкаВидНоменклатура.Следующий() Цикл
				ВидНоменклатурыСтроки = ВыборкаВидНоменклатура.Ссылка;
			КонецЦикла; 
			Если ВидНоменклатурыСтроки = Справочники.ВидыНоменклатуры.ПустаяСсылка() Тогда
				НовыйВидНоменклатуры = Справочники.ВидыНоменклатуры.СоздатьЭлемент();
				НовыйВидНоменклатуры.Наименование = СокрЛП(Лист.Cells(Строка, 9).Value);
				НовыйВидНоменклатуры.ТипНоменклатуры = ТипНом;
				НовыйВидНоменклатуры.Записать();
				ВидНоменклатурыСтроки = НовыйВидНоменклатуры.Ссылка;
			КонецЕсли;
			
			//Проверим есть ли в базе Единица измерения
			ЕдИз = Справочники.КлассификаторЕдиницИзмерения.ПустаяСсылка();
			ЕдИз = Справочники.КлассификаторЕдиницИзмерения.НайтиПоНаименованию( СокрЛП(Лист.Cells(Строка, 3).Value));
			Если ЕдИз = Справочники.КлассификаторЕдиницИзмерения.ПустаяСсылка() Тогда
				НоваяЕдИЗ = Справочники.КлассификаторЕдиницИзмерения.СоздатьЭлемент();
				НоваяЕдИЗ.Наименование = СокрЛП(Лист.Cells(Строка, 3).Value);
				НоваяЕдИЗ.НаименованиеПолное = СокрЛП(Лист.Cells(Строка, 3).Value);
				НоваяЕдИЗ.УстановитьНовыйКод();
				НоваяЕдИЗ.Записать();
                ЕдИз = НоваяЕдИЗ.Ссылка;
			КонецЕсли;
			
			//Проверим есть ли в базе Номенклатурная группа
			НомГруппаСтроки = Справочники.НоменклатурныеГруппы.ПустаяСсылка();
			НомГруппаСтроки = Справочники.НоменклатурныеГруппы.НайтиПоНаименованию(СокрЛП(Лист.Cells(Строка, 7).Value));
			Если НомГруппаСтроки = Справочники.НоменклатурныеГруппы.ПустаяСсылка() Тогда
				НоваяНомГруппа = Справочники.НоменклатурныеГруппы.СоздатьЭлемент();
				НоваяНомГруппа.Наименование = СокрЛП(Лист.Cells(Строка, 7).Value);
				НоваяНомГруппа.БазоваяЕдиницаИзмерения = ЕдИз;
				НоваяНомГруппа.Записать();
				НомГруппаСтроки = НоваяНомГруппа.Ссылка;
			КонецЕсли;
			
			НоваяНоменклатура = Справочники.Номенклатура.СоздатьЭлемент();
			НоваяНоменклатура.Артикул = СокрЛП(Лист.Cells(Строка, 1).Value);
			НоваяНоменклатура.БазоваяЕдиницаИзмерения =  ЕдИз;
			НоваяНоменклатура.ВидНоменклатуры = ВидНоменклатурыСтроки;
			НоваяНоменклатура.Наименование = СокрЛП(Лист.Cells(Строка, 2).Value) ;
			НоваяНоменклатура.НаименованиеПолное = СокрЛП(Лист.Cells(Строка, 10).Value) ;  
			НоваяНоменклатура.НоменклатурнаяГруппа = НомГруппаСтроки;
			НоваяНоменклатура.ОсновнойПоставщик = Поставщик;
			НоваяНоменклатура.Родитель = ЭлементыФормы.ПапкаНоменклатуры.Значение;   
			НоваяНоменклатура.Записать();
			
			ЕдИзНоменклатуры = Справочники.ЕдиницыИзмерения.СоздатьЭлемент();
			ЕдИзНоменклатуры.Владелец = НоваяНоменклатура.Ссылка;
			ЕдИзНоменклатуры.ЕдиницаПоКлассификатору = ЕдИз;
			ЕдИзНоменклатуры.Наименование = ЕдИз.Наименование;
			ЕдИзНоменклатуры.Коэффициент = 1.000;
			ЕдИзНоменклатуры.Записать();
			
			НоваяНоменклатура.ЕдиницаХраненияОстатков = ЕдИзНоменклатуры.Ссылка;
			НоваяНоменклатура.ЕдиницаДляОтчетов = ЕдИзНоменклатуры.Ссылка;
			НоваяНоменклатура.Записать();
			
			НоменклатрураСтроки = НоваяНоменклатура.Ссылка;
		КонецЕсли; //Если НЕ ЕстьНоменклатура = Истина Тогда
		
		//Получаем Характеристику
		Если НЕ Характеристика = "" Тогда
			НОбъект = НоменклатрураСтроки.ПолучитьОбъект();
			НОбъект.ВестиУчетПоХарактеристикам = Истина;
			НОбъект.Записать();
			Запрос = Новый Запрос;
			Запрос.УстановитьПараметр("Владелец", НоменклатрураСтроки);
			Запрос.УстановитьПараметр("Наименование", СокрЛП(Лист.Cells(Строка, 6).Value) );
			Запрос.Текст =
			"ВЫБРАТЬ
			|	ХарактеристикиНоменклатуры.Наименование КАК Наименование,
			|	ХарактеристикиНоменклатуры.Владелец КАК Владелец,
			|	ХарактеристикиНоменклатуры.Ссылка  КАК Ссылка
			|ИЗ
			|	Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
			|ГДЕ
			|	ХарактеристикиНоменклатуры.Владелец = &Владелец
			|	И ХарактеристикиНоменклатуры.Наименование = &Наименование";
			Выборка = Запрос.Выполнить().Выбрать();
			Пока Выборка.Следующий() Цикл
				ХарактеристикаСтроки = Выборка.Ссылка;	
			КонецЦикла;
			Если ХарактеристикаСтроки = Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка() Тогда
				Столбец = 12;
				Характеристика = Справочники.ХарактеристикиНоменклатуры.СоздатьЭлемент();
				Характеристика.Владелец = НоменклатрураСтроки;
				Характеристика.Наименование = СокрЛП(Лист.Cells(Строка, 6).Value);
				Характеристика.Записать();
				//Проверим есть ли Свойство, Значение в ИБ, если нет, создадим
				Пока СокрЛП(Лист.Cells(Строка, Столбец).Value) <> "" Цикл 
					Свойство = ПланыВидовХарактеристик.СвойстваОбъектов.ПустаяСсылка();
					Запрос = Новый Запрос;
					Запрос.УстановитьПараметр("НазначениеСвойства", ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_ХарактеристикиНоменклатуры);
					Запрос.УстановитьПараметр("Наименование", СокрЛП(Лист.Cells(Строка, Столбец).Value)); 
					Запрос.Текст = 
					"ВЫБРАТЬ
					|	СвойстваОбъектов.Наименование КАК Наименование,
					|	СвойстваОбъектов.Ссылка КАК СвойствоСсылка
					|ИЗ
					|	ПланВидовХарактеристик.СвойстваОбъектов КАК СвойстваОбъектов
					|ГДЕ
					|	СвойстваОбъектов.НазначениеСвойства = &НазначениеСвойства
					|	И СвойстваОбъектов.Наименование = &Наименование
					|	" ;
					Выборка = Запрос.Выполнить().Выбрать();
					Пока Выборка.Следующий() Цикл;
						Свойство = Выборка.СвойствоСсылка; 	 
					КонецЦикла;
					Если Свойство = ПланыВидовХарактеристик.СвойстваОбъектов.ПустаяСсылка() Тогда
						НовоеСвойство = ПланыВидовХарактеристик.СвойстваОбъектов.СоздатьЭлемент();
						НовоеСвойство.НазначениеСвойства = ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_ХарактеристикиНоменклатуры;
						НовоеСвойство.Наименование = СокрЛП(Лист.Cells(Строка, Столбец).Value);
						НовоеСвойство.Записать();
						Свойство = НовоеСвойство.Ссылка;
					КонецЕсли;
					//проверяем ЗначениеСвойства
					ЗначениеСвойства = Справочники.ЗначенияСвойствОбъектов.ПустаяСсылка();
					Запрос = Новый Запрос;
					Запрос.УстановитьПараметр("Владелец", Свойство);
					Запрос.УстановитьПараметр("Наименование", СокрЛП(Лист.Cells(Строка, Столбец+1).Value)); 
					Запрос.Текст =
					"ВЫБРАТЬ
					|	ЗначенияСвойствОбъектов.Ссылка  КАК ЗначениеСвойстваСсылка
					|ИЗ
					|	Справочник.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
					|ГДЕ
					|	ЗначенияСвойствОбъектов.Владелец = &Владелец
					|	И ЗначенияСвойствОбъектов.Наименование = &Наименование
					| ";
					Выборка = Запрос.Выполнить().Выбрать();
					Пока Выборка.Следующий() Цикл
						ЗначениеСвойства = Выборка.ЗначениеСвойстваСсылка;		
					КонецЦикла;
					Если ЗначениеСвойства = Справочники.ЗначенияСвойствОбъектов.ПустаяСсылка() Тогда
						ЗначениеСвойства = Справочники.ЗначенияСвойствОбъектов.СоздатьЭлемент();
						ЗначениеСвойства.Владелец = Свойство.Ссылка;
						ЗначениеСвойства.Наименование = СокрЛП(Лист.Cells(Строка, Столбец+1).Value);
						Значениесвойства.Записать();
					КонецЕсли;
					
					Запись = РегистрыСведений.ЗначенияСвойствОбъектов.СоздатьМенеджерЗаписи();
					Запись.Объект = Характеристика.Ссылка;
				    Запись.Свойство = Свойство;
				    Запись.Значение = Значениесвойства;
				    Запись.Записать();

					Столбец = Столбец + 2;
					Свойство = ПланыВидовХарактеристик.СвойстваОбъектов.ПустаяСсылка();
				КонецЦикла; //Пока СокрЛП(Лист.Cells(Строка, Столбец).Value) <> "" Цикл 
				
				СвойстваХарактеристики = РегистрыСведений.ЗначенияСвойствОбъектов.СоздатьНаборЗаписей();
			    СвойстваХарактеристики.Отбор.Объект.Значение = Характеристика.Ссылка;
			    СвойстваХарактеристики.Отбор.Объект.Использование = Истина;
			    Характеристика.СформироватьНаименование(СвойстваХарактеристики.Выгрузить());
			    Характеристика.Записать();
                ХарактеристикаСсылка = Характеристика.Ссылка;
				ХарактеристикаСтроки = ХарактеристикаСсылка;
			КонецЕсли; //Если ХарактеристикаСтроки = Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка() Тогда
		КонецЕсли; //Если Характеристика = "" Тогда
		
		Стр = Товары.Добавить();
		Стр.Номенклатура = НоменклатрураСтроки;
		Стр.Артикул = НоменклатрураСтроки.Артикул;
		Стр.ХарактеристикаНоменклатуры = ХарактеристикаСтроки;
		Стр.ЕдиницаИзмерения = НоменклатрураСтроки.ЕдиницаХраненияОстатков;
		Стр.ВидНоменклатуры = НоменклатрураСтроки.ВидНоменклатуры;
		Стр.НоменклатурнаяГруппа = НоменклатрураСтроки.НоменклатурнаяГруппа;
		Стр.Родитель = НоменклатрураСтроки.Родитель;
		Стр.КоличествоВФайле = Лист.Cells(Строка, 5).Value;
		Стр.Цена = Лист.Cells(Строка, 4).Value;
		
		//Получить количество в базе
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Склад", Склад);
		Запрос.УстановитьПараметр("Дата", ДатаЗагрузки);
		Запрос.УстановитьПараметр("Номенклатура", Стр.Номенклатура);
		Запрос.УстановитьПараметр("ХарактеристикаНоменклатуры", Стр.ХарактеристикаНоменклатуры);
		ТекстЗапроса =  
			"ВЫБРАТЬ
			|	ТаблицаОстатков.КоличествоОстаток   КАК КоличествоБаза
			|ИЗ
			|	";
		Если Склад.ВидСклада = Перечисления.ВидыСкладов.Оптовый Тогда
			ТекстЗапроса = ТекстЗапроса + "
			|	РегистрНакопления.ТоварыНаСкладах.Остатки(&Дата) КАК ТаблицаОстатков
			|	";
        ИначеЕсли Склад.ВидСклада = Перечисления.ВидыСкладов.Розничный Тогда
			ТекстЗапроса = ТекстЗапроса + "
			|	РегистрНакопления.ТоварыВРознице.Остатки(&Дата) КАК ТаблицаОстатков
			|	";
        ИначеЕсли Склад.ВидСклада = Перечисления.ВидыСкладов.НТТ Тогда
			ТекстЗапроса = ТекстЗапроса + "
			|	РегистрНакопления.ТоварыВНТТ.Остатки(&Дата) КАК ТаблицаОстатков
			|	";
		КонецЕсли;
		ТекстЗапроса = ТекстЗапроса + "
			|ГДЕ
			|	ТаблицаОстатков.Склад = &Склад
			|	И ТаблицаОстатков.Номенклатура = &Номенклатура
			|	И ТаблицаОстатков.ХарактеристикаНоменклатуры = &ХарактеристикаНоменклатуры
			|	";
			
		Запрос.Текст = ТекстЗапроса;
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
        	Стр.КоличествоВБазе = Выборка.КоличествоБаза;
		КонецЦикла;
		
	КонецЦикла;	
	
	
	
	ОбъектЭксел.Application.Quit();
КонецПроцедуры

Процедура ТоварыКоличествоВФайлеПриИзменении(Элемент)
	ТД=ЭлементыФормы.Товары.ТекущиеДанные;
	ТД.Отклонение = ТД.КоличествоВБазе - ТД.КоличествоВФайле;
КонецПроцедуры

Процедура ТоварыПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	Если  ДанныеСтроки.КоличествоВФайле - ДанныеСтроки.КоличествоВБазе < 0 Тогда
		Для каждого ОформлениеЯчейки из ОформлениеСтроки.Ячейки Цикл 
			ОформлениеЯчейки.ЦветФона = Новый Цвет(255, 204, 153);
		КонецЦикла ;
	ИначеЕсли ДанныеСтроки.КоличествоВФайле - ДанныеСтроки.КоличествоВБазе > 0 Тогда
		Для каждого ОформлениеЯчейки из ОформлениеСтроки.Ячейки Цикл 
    		ОформлениеЯчейки.ЦветФона = Новый Цвет(180, 255, 173);
		КонецЦикла ;
    КонецЕсли;
	ОформлениеСтроки.Ячейки.Отклонение.УстановитьТекст(ДанныеСтроки.КоличествоВБазе - ДанныеСтроки.КоличествоВФайле);
КонецПроцедуры

Процедура КнопкаОприходованияНажатие(Элемент)
	Ошибка = "";
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		Ошибка = Ошибка + "Выберите Организацию!";
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(Склад) Тогда
		Ошибка = Ошибка + " Выберите Склад!";
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ДатаЗагрузки) Тогда                             
		Ошибка = Ошибка + " Введите дату!";
	КонецЕсли;
	Если НЕ Ошибка = "" Тогда
		Вопрос(Ошибка, РежимДиалогаВопрос.ОК);
		Возврат;
	КонецЕсли;
	Если НЕ Товары.Количество() > 0 Тогда
		Вопрос("В табличной части отсутствуют строки, заполните табличную часть", РежимДиалогаВопрос.ОК);
		Возврат;
	КонецЕсли;	
	ЕстьЧтоОприходовать = Ложь;
	Оприходование = Документы.ОприходованиеТоваров.СоздатьДокумент();
	Оприходование.Дата = ДатаЗагрузки;
	Оприходование.Организация = Организация;
	Оприходование.ОтражатьВБухгалтерскомУчете = Истина;
	Оприходование.ОтражатьВНалоговомУчете = Истина;
	Оприходование.ОтражатьВУправленческомУчете = Истина;
	Оприходование.Склад = Склад;
	Оприходование.Комментарий = "Создан автоматически при загрузке товаров из Exel от " + Поставщик + " " + ДатаЗагрузки;
	
	Если Склад.ВидСклада = Перечисления.ВидыСкладов.Розничный Тогда
		Переоценка = Документы.ПереоценкаТоваровВРознице.СоздатьДокумент();
		Переоценка.Дата = ДатаЗагрузки;
		Переоценка.Организация = Организация;
		Переоценка.ВидОперации = Перечисления.ВидыОперацийПереоценкаТоваровВРознице.ПереоценкаВРознице;
		Переоценка.Склад = Склад;
		Переоценка.Комментарий = "Создан автоматически при загрузке товаров из Exel " + ДатаЗагрузки;
	КонецЕсли;
	                                                                            
	Для каждого Стр из Товары Цикл
        Если Стр.КоличествоВБазе - Стр.КоличествоВФайле < 0 Тогда
			СтрОприходвание = Оприходование.Товары.Добавить();
			СтрОприходвание.Номенклатура = Стр.Номенклатура;
			СтрОприходвание.ХарактеристикаНоменклатуры = Стр.ХарактеристикаНоменклатуры;
			СтрОприходвание.Количество = - (Стр.КоличествоВБазе - Стр.КоличествоВФайле);
			СтрОприходвание.ЕдиницаИзмерения =  Стр.ЕдиницаИзмерения;
			СтрОприходвание.Коэффициент = 1.000;
			СтрОприходвание.Цена = Стр.Цена;
			СтрОприходвание.Качество = Справочники.Качество.НайтиПоНаименованию("Новый");
			СтрОприходвание.Сумма = (-(Стр.КоличествоВБазе - Стр.КоличествоВФайле)) * Стр.Цена;
			СтрОприходвание.СуммаРегл = СтрОприходвание.Сумма;
			ЕстьЧтоОприходовать = Истина;
			
			Если Склад.ВидСклада = Перечисления.ВидыСкладов.Розничный Тогда
				СтрПереоценка = Переоценка.Товары.Добавить();
				СтрПереоценка.Номенклатура = Стр.Номенклатура;
				//СтрПереоценка.ХарактеристикаНоменклатуры = Стр.ХарактеристикаНоменклатуры;
				СтрПереоценка.ЦенаВРознице = Стр.Цена;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	Если ЕстьЧтоОприходовать = Истина Тогда
		Если Склад.ВидСклада = Перечисления.ВидыСкладов.Розничный Тогда
			Переоценка.Записать(РежимЗаписиДокумента.Проведение, РежимПроведенияДокумента.Неоперативный);
			Сообщить ("Создан документ Переоценка товаров в рознице № " + Переоценка.Номер + " от " + ДатаЗагрузки);
		КонецЕсли;
		Оприходование.Записать(РежимЗаписиДокумента.Проведение, РежимПроведенияДокумента.Неоперативный);
		Результат = Документы.ОприходованиеТоваров.НайтиПоНомеру(Оприходование.Номер, ДатаЗагрузки);
		Результат.ПолучитьФорму().Открыть();
		Сообщить ("Создан документ Оприходование товаров № " + Оприходование.Номер + " от " + ДатаЗагрузки);
	Иначе
		Вопрос("Не обнаружена номенклатура, которую необходимо оприходовать (зеленые строки)", РежимДиалогаВопрос.ОК);
	КонецЕсли;
КонецПроцедуры

Процедура КнопкаСписанияНажатие(Элемент)
	Ошибка = "";
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		Ошибка = Ошибка + "Выберите Организацию!";
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(Склад) Тогда
		Ошибка = Ошибка + " Выберите Склад!";
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ДатаЗагрузки) Тогда                             
		Ошибка = Ошибка + " Введите дату!";
	КонецЕсли;
	Если НЕ Ошибка = "" Тогда
		Вопрос(Ошибка, РежимДиалогаВопрос.ОК);
		Возврат;
	КонецЕсли;
	Если НЕ Товары.Количество() > 0 Тогда
		Вопрос("В табличной части отсутствуют строки, заполните табличную часть", РежимДиалогаВопрос.ОК);
		Возврат;
	КонецЕсли;	
	ЕстьЧтоСписать = Ложь;
	Списание = Документы.СписаниеТоваров.СоздатьДокумент();
	Списание.Дата = ДатаЗагрузки;
	Списание.Организация = Организация;
	Списание.ОтражатьВБухгалтерскомУчете = Истина;
	Списание.ОтражатьВНалоговомУчете = Истина;
	Списание.ОтражатьВУправленческомУчете = Истина;
	Списание.Склад = Склад;
	Списание.НДСвСтоимостиТоваров = Перечисления.ДействиеНДСВСтоимостиТоваров.НеИзменять;
	Списание.Комментарий = "Создан автоматически при загрузке товаров из Exel от " + Поставщик + " " + ДатаЗагрузки;
	Для каждого Стр из Товары Цикл
        Если Стр.КоличествоВБазе - Стр.КоличествоВФайле > 0 Тогда
			СтрСписание = Списание.Товары.Добавить();
			СтрСписание.Номенклатура = Стр.Номенклатура;
			СтрСписание.ХарактеристикаНоменклатуры = Стр.ХарактеристикаНоменклатуры;
			СтрСписание.Количество = Стр.КоличествоВБазе - Стр.КоличествоВФайле;
			СтрСписание.ЕдиницаИзмерения =  Стр.ЕдиницаИзмерения;
			СтрСписание.Коэффициент = 1.000;
			СтрСписание.Качество = Справочники.Качество.НайтиПоНаименованию("Новый");
			ЕстьЧтоСписать = Истина;
		КонецЕсли;
	КонецЦикла;
	Если ЕстьЧтоСписать = Истина Тогда
		Списание.Записать(РежимЗаписиДокумента.Проведение, РежимПроведенияДокумента.Неоперативный);
		Результат = Документы.СписаниеТоваров.НайтиПоНомеру(Списание.Номер, ДатаЗагрузки);
		Результат.ПолучитьФорму().Открыть();
		Сообщить ("Создан документ Списание товаров № " + Списание.Номер + " от " + ДатаЗагрузки);
	Иначе
		Вопрос("Не обнаружена номенклатура, которую необходимо списать (красные строки)", РежимДиалогаВопрос.ОК);
	КонецЕсли;
КонецПроцедуры

Процедура ОбновитьЦеныНажатие(Элемент)
	Ошибка = "";
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		Ошибка = Ошибка + "Выберите Организацию!";
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ТипЦен) Тогда
		Ошибка = Ошибка + " Выберите Тип цен!";
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ДатаЗагрузки) Тогда                             
		Ошибка = Ошибка + " Введите дату!";
	КонецЕсли;
	Если НЕ Ошибка = "" Тогда
		Вопрос(Ошибка, РежимДиалогаВопрос.ОК);
		Возврат;
	КонецЕсли;
	Если НЕ Товары.Количество() > 0 Тогда
		Вопрос("В табличной части отсутствуют строки, заполните табличную часть", РежимДиалогаВопрос.ОК);
		Возврат;
	КонецЕсли;
	Ответ = Вопрос("При наличии записи Цены от " + Формат(ДатаЗагрузки, "ДЛФ=Д") + " Цена будет перезаписана", РежимДиалогаВопрос.ОКОтмена,, КодВозвратаДиалога.ОК) ;
	Если НЕ Ответ = КодВозвратаДиалога.ОК Тогда
		Возврат;
	КонецЕсли;
	ЕстьЦеныДляЗаписи = Ложь;
	УстановкаЦен = Документы.УстановкаЦенНоменклатуры.СоздатьДокумент();
	УстановкаЦен.Дата = ДатаЗагрузки;
	УстановкаЦен.НеПроводитьНулевыеЗначения = Истина;
	ТипЦ = УстановкаЦен.ТипыЦен.Добавить();
	ТипЦ.ТипЦен = ТипЦен;
	Для каждого Стр из Товары Цикл
		Цена = 0;
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ТипЦен", ТипЦен);
		Запрос.УстановитьПараметр("Период", НачалоДня(ДатаЗагрузки));
		Запрос.УстановитьПараметр("Номенклатура", Стр.Номенклатура);
		Запрос.УстановитьПараметр("ХарактеристикаНоменклатуры", Стр.ХарактеристикаНоменклатуры); 
		Запрос.УстановитьПараметр("ЕдиницаИзмерения", Стр.ЕдиницаИзмерения);
		Запрос.Текст =  "ВЫБРАТЬ
		                |	ЦеныНоменклатуры.Регистратор КАК Регистратор,
		                |	ЦеныНоменклатуры.Цена КАК Цена,
		                |	ЦеныНоменклатуры.Номенклатура КАК Номенклатура
		                |ИЗ
		                |	РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
		                |ГДЕ
		                |	ЦеныНоменклатуры.ТипЦен = &ТипЦен
		                |	И ЦеныНоменклатуры.Номенклатура = &Номенклатура
		                |	И ЦеныНоменклатуры.Период = &Период
		                |	И ЦеныНоменклатуры.ХарактеристикаНоменклатуры = &ХарактеристикаНоменклатуры";
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			Цена = Выборка.Цена;
			ОбъектРегистратор = Выборка.Регистратор.ПолучитьОбъект();
			Для каждого СтрЦенаВУЦН Из ОбъектРегистратор.Товары Цикл
				Если СтрЦенаВУЦН.Номенклатура = Стр.Номенклатура И СтрЦенаВУЦН.ТипЦен = ТипЦен Тогда
					ОбъектРегистратор.Товары.Удалить(СтрЦенаВУЦН);
				КонецЕсли;
			КонецЦикла;
			ОбъектРегистратор.Записать(РежимЗаписиДокумента.Проведение, РежимПроведенияДокумента.Неоперативный);
		КонецЦикла;
		
		СтрокаНовойЦены = УстановкаЦен.Товары.Добавить();
		СтрокаНовойЦены.Номенклатура = Стр.Номенклатура;
		СтрокаНовойЦены.ЕдиницаИзмерения = Стр.ЕдиницаИзмерения;
		СтрокаНовойЦены.ХарактеристикаНоменклатуры = Стр.ХарактеристикаНоменклатуры;
		СтрокаНовойЦены.Валюта = Константы.ВалютаРегламентированногоУчета.Получить();
		СтрокаНовойЦены.Цена = Стр.Цена;
		СтрокаНовойЦены.ТипЦен = ТипЦен;
		СтрокаНовойЦены.СпособРасчетаЦены = ТипЦен.СпособРасчетаЦены;
		
		УстановкаЦен.Записать(РежимЗаписиДокумента.Проведение, РежимПроведенияДокумента.Неоперативный);

		Если НЕ Цена = 0 Тогда
			Сообщить("Для номенклатуры " + Стр.Номенклатура + " в строке № " + Стр.НомерСтроки + " заменена цена на дату " + Формат(ДатаЗагрузки, "ДЛФ=Д")); 
		КонецЕсли;
	КонецЦикла;
	УстановкаЦен.ПолучитьФорму().Открыть();
КонецПроцедуры


